import gmpy2
from cryptography.hazmat.primitives.asymmetric import ec
from cryptography.hazmat.backends import default_backend

def SetRandom(num_bits):
    return gmpy2.mpz_random(gmpy2.random_state(), 2**num_bits)

def BasePointGGet():
    curve = ec.SECP256K1()
    generator = curve.generator
    return generator.public_key(default_backend())

def VerifyCorrectness():
  
    G = BasePointGGet()
  
    k = SetRandom(256)
    d = SetRandom(256)
   
    H1 = ScalarMult(d, G)
   
    H2 = ScalarMult(k, H1)
    
    H3 = ScalarMult(k, G)
   
    H4 = ScalarMult(d, H3)
  
    result = IsEqual(H2, H4)

    return result

# Перевірка коректності
correct = VerifyCorrectness()
print("Result:", correct)
